
fmt_pulse_beacon.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  000002a8  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000160  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000002a8  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000002d7  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000002e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003e29  00000000  00000000  00000325  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002dff  00000000  00000000  0000414e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003fb  00000000  00000000  00006f4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000084  00000000  00000000  00007348  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001542  00000000  00000000  000073cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000078  00000000  00000000  0000890e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00008986  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000206  00000206  0000029a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000089b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.__vector_47 0000003e  00000160  00000160  000001f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__vector_8 0000001e  000001d2  000001d2  00000266  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.main    00000034  0000019e  0000019e  00000232  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .bss.is_sig   00000001  00804000  00804000  000002a8  2**0
                  ALLOC
 18 .text.__dummy_fini 00000002  0000020e  0000020e  000002a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__dummy_funcs_on_exit 00000002  00000210  00000210  000002a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__dummy_simulator_exit 00000002  00000212  00000212  000002a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.exit    00000016  000001f0  000001f0  00000284  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text._Exit   00000004  0000020a  0000020a  0000029e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__ctors_end>
   4:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
   8:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
   c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  10:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  14:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  18:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  1c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  20:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__vector_8>
  24:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  28:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  2c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  30:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  34:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  38:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  3c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  40:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  44:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  48:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  4c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  50:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  54:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  58:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  5c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  60:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  64:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  68:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  6c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  70:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  74:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  78:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  7c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  80:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  84:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  88:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  8c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  90:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  94:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  98:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  9c:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  a0:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  a4:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  a8:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  ac:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  b0:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  b4:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  b8:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  bc:	0c 94 b0 00 	jmp	0x160	; 0x160 <_etext>
  c0:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  c4:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  c8:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  cc:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  d0:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  d4:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  d8:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  dc:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  e0:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  e4:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  e8:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  ec:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>
  f0:	0c 94 03 01 	jmp	0x206	; 0x206 <__bad_interrupt>

000000f4 <.dinit>:
  f4:	40 00       	.word	0x0040	; ????
  f6:	40 01       	movw	r8, r0
  f8:	80 00       	.word	0x0080	; ????

000000fa <__ctors_end>:
  fa:	80 91 01 10 	lds	r24, 0x1001	; 0x801001 <__TEXT_REGION_LENGTH__+0x7e1001>
  fe:	8f 7c       	andi	r24, 0xCF	; 207
 100:	80 60       	ori	r24, 0x00	; 0
 102:	80 68       	ori	r24, 0x80	; 128
 104:	80 93 01 10 	sts	0x1001, r24	; 0x801001 <__TEXT_REGION_LENGTH__+0x7e1001>
 108:	11 24       	eor	r1, r1
 10a:	1f be       	out	0x3f, r1	; 63
 10c:	cf ef       	ldi	r28, 0xFF	; 255
 10e:	cd bf       	out	0x3d, r28	; 61
 110:	df e7       	ldi	r29, 0x7F	; 127
 112:	de bf       	out	0x3e, r29	; 62

00000114 <__do_copy_data>:
 114:	e4 ef       	ldi	r30, 0xF4	; 244
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	40 e0       	ldi	r20, 0x00	; 0
 11a:	19 c0       	rjmp	.+50     	; 0x14e <__do_clear_bss+0x8>
 11c:	b7 91       	elpm	r27, Z+
 11e:	a7 91       	elpm	r26, Z+
 120:	37 91       	elpm	r19, Z+
 122:	27 91       	elpm	r18, Z+
 124:	07 91       	elpm	r16, Z+
 126:	07 fd       	sbrc	r16, 7
 128:	0e c0       	rjmp	.+28     	; 0x146 <__do_clear_bss>
 12a:	97 91       	elpm	r25, Z+
 12c:	87 91       	elpm	r24, Z+
 12e:	ef 01       	movw	r28, r30
 130:	f9 2f       	mov	r31, r25
 132:	e8 2f       	mov	r30, r24
 134:	0b bf       	out	0x3b, r16	; 59
 136:	07 90       	elpm	r0, Z+
 138:	0d 92       	st	X+, r0
 13a:	a2 17       	cp	r26, r18
 13c:	b3 07       	cpc	r27, r19
 13e:	d9 f7       	brne	.-10     	; 0x136 <__do_copy_data+0x22>
 140:	fe 01       	movw	r30, r28
 142:	1b be       	out	0x3b, r1	; 59
 144:	04 c0       	rjmp	.+8      	; 0x14e <__do_clear_bss+0x8>

00000146 <__do_clear_bss>:
 146:	1d 92       	st	X+, r1
 148:	a2 17       	cp	r26, r18
 14a:	b3 07       	cpc	r27, r19
 14c:	e1 f7       	brne	.-8      	; 0x146 <__do_clear_bss>
 14e:	e9 3f       	cpi	r30, 0xF9	; 249
 150:	f4 07       	cpc	r31, r20
 152:	21 f7       	brne	.-56     	; 0x11c <__do_copy_data+0x8>
 154:	0e 94 cf 00 	call	0x19e	; 0x19e <main>
 158:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <exit>

0000015c <_exit>:
 15c:	f8 94       	cli

0000015e <__stop_program>:
 15e:	ff cf       	rjmp	.-2      	; 0x15e <__stop_program>

Disassembly of section .text:

00000206 <__bad_interrupt>:
 206:	0c 94 00 00 	jmp	0	; 0x0 <__FLMAP_SECTION0__>

Disassembly of section .text.__vector_47:

00000160 <__vector_47>:

	TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
}*/

ISR(TCA1_OVF_vect)
{
 160:	1f 92       	push	r1
 162:	0f 92       	push	r0
 164:	0f b6       	in	r0, 0x3f	; 63
 166:	0f 92       	push	r0
 168:	11 24       	eor	r1, r1
 16a:	8f 93       	push	r24

	if ( is_sig ) {
 16c:	80 91 00 40 	lds	r24, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
 170:	88 23       	and	r24, r24
 172:	31 f0       	breq	.+12     	; 0x180 <__vector_47+0x20>
		is_sig = 0;
 174:	10 92 00 40 	sts	0x4000, r1	; 0x804000 <__DATA_REGION_ORIGIN__>
		PORTB.OUTCLR = PIN3_bm;
 178:	88 e0       	ldi	r24, 0x08	; 8
 17a:	80 93 26 04 	sts	0x0426, r24	; 0x800426 <__TEXT_REGION_LENGTH__+0x7e0426>
 17e:	06 c0       	rjmp	.+12     	; 0x18c <__vector_47+0x2c>
		} else { is_sig = 1; PORTB.OUTSET = PIN3_bm; }
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	80 93 00 40 	sts	0x4000, r24	; 0x804000 <__DATA_REGION_ORIGIN__>
 186:	88 e0       	ldi	r24, 0x08	; 8
 188:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <__TEXT_REGION_LENGTH__+0x7e0425>

		TCA1.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	80 93 4b 0a 	sts	0x0A4B, r24	; 0x800a4b <__TEXT_REGION_LENGTH__+0x7e0a4b>
		
		//PORTB.OUTCLR = PIN3_bm;
		//TCA1.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
		//TCA1.SINGLE.CNT = 0;
	}
 192:	8f 91       	pop	r24
 194:	0f 90       	pop	r0
 196:	0f be       	out	0x3f, r0	; 63
 198:	0f 90       	pop	r0
 19a:	1f 90       	pop	r1
 19c:	18 95       	reti

Disassembly of section .text.__vector_8:

000001d2 <__vector_8>:

ISR(PORTA_PORT_vect) {
 1d2:	1f 92       	push	r1
 1d4:	0f 92       	push	r0
 1d6:	0f b6       	in	r0, 0x3f	; 63
 1d8:	0f 92       	push	r0
 1da:	11 24       	eor	r1, r1
 1dc:	8f 93       	push	r24
	
	PORTB.OUTSET = PIN3_bm;
 1de:	88 e0       	ldi	r24, 0x08	; 8
 1e0:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <__TEXT_REGION_LENGTH__+0x7e0425>
	//TCA1.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
}
 1e4:	8f 91       	pop	r24
 1e6:	0f 90       	pop	r0
 1e8:	0f be       	out	0x3f, r0	; 63
 1ea:	0f 90       	pop	r0
 1ec:	1f 90       	pop	r1
 1ee:	18 95       	reti

Disassembly of section .text.main:

0000019e <main>:

int main(void)
{

	PORTB.DIRSET = PIN3_bm;
 19e:	e0 e2       	ldi	r30, 0x20	; 32
 1a0:	f4 e0       	ldi	r31, 0x04	; 4
 1a2:	88 e0       	ldi	r24, 0x08	; 8
 1a4:	81 83       	std	Z+1, r24	; 0x01
	PORTB.OUTSET = PIN3_bm;
 1a6:	85 83       	std	Z+5, r24	; 0x05
	
	PORTB.DIRCLR = PIN2_bm;
 1a8:	94 e0       	ldi	r25, 0x04	; 4
 1aa:	92 83       	std	Z+2, r25	; 0x02
	PORTB.PIN2CTRL = PORT_PULLUPEN_bm;
 1ac:	82 8b       	std	Z+18, r24	; 0x12
	PORTB.PIN2CTRL |= PORT_ISC_BOTHEDGES_gc;
 1ae:	82 89       	ldd	r24, Z+18	; 0x12
 1b0:	81 60       	ori	r24, 0x01	; 1
 1b2:	82 8b       	std	Z+18, r24	; 0x12
	
	PORTA.DIRCLR = PIN2_bm;
 1b4:	90 93 02 04 	sts	0x0402, r25	; 0x800402 <__TEXT_REGION_LENGTH__+0x7e0402>
	//PORTA.PIN2CTRL = PORT_PULLUPEN_bm;
	//PORTA.PIN2CTRL |= PORT_ISC_BOTHEDGES_gc;
	
	//TIMER_0_init();
	//TIMER_TCA1_init();
	sei();
 1b8:	78 94       	sei
	
    while(1)
    {
		if (PORTA.IN & PIN2_bm)
 1ba:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x7e0408>
 1be:	82 ff       	sbrs	r24, 2
 1c0:	04 c0       	rjmp	.+8      	; 0x1ca <main+0x2c>
		{
			PORTB.OUTCLR = PIN3_bm;
 1c2:	88 e0       	ldi	r24, 0x08	; 8
 1c4:	80 93 26 04 	sts	0x0426, r24	; 0x800426 <__TEXT_REGION_LENGTH__+0x7e0426>
 1c8:	f8 cf       	rjmp	.-16     	; 0x1ba <main+0x1c>
			//TCA1.SINGLE.CNT = 0;
		} else { PORTB.OUTSET = PIN3_bm; }
 1ca:	88 e0       	ldi	r24, 0x08	; 8
 1cc:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <__TEXT_REGION_LENGTH__+0x7e0425>
 1d0:	f4 cf       	rjmp	.-24     	; 0x1ba <main+0x1c>

Disassembly of section .text.__dummy_fini:

0000020e <_fini>:
 20e:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000210 <__funcs_on_exit>:
 210:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000212 <__simulator_exit>:
 212:	08 95       	ret

Disassembly of section .text.exit:

000001f0 <exit>:
 1f0:	ec 01       	movw	r28, r24
 1f2:	0e 94 08 01 	call	0x210	; 0x210 <__funcs_on_exit>
 1f6:	0e 94 07 01 	call	0x20e	; 0x20e <_fini>
 1fa:	ce 01       	movw	r24, r28
 1fc:	0e 94 09 01 	call	0x212	; 0x212 <__simulator_exit>
 200:	ce 01       	movw	r24, r28
 202:	0e 94 05 01 	call	0x20a	; 0x20a <_Exit>

Disassembly of section .text._Exit:

0000020a <_Exit>:
 20a:	0e 94 ae 00 	call	0x15c	; 0x15c <_exit>
