
fmt_pulse_beacon.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  000002bc  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000160  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000002bc  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000002eb  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000002f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000545d  00000000  00000000  00000339  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002e0c  00000000  00000000  00005796  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000407  00000000  00000000  000085a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000074  00000000  00000000  000089ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001542  00000000  00000000  00008a20  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000003c  00000000  00000000  00009f62  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00009f9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  0000021a  0000021a  000002ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00009fd0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.initComparator 0000001c  000001be  000001be  00000252  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.EVENT_SYSTEM_0_init 00000010  0000020a  0000020a  0000029e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.TIMER_0_init 0000001a  000001da  000001da  0000026e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__vector_9 0000003e  00000160  00000160  000001f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.main    00000020  0000019e  0000019e  00000232  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .bss.is_sig   00000001  00804000  00804000  000002bc  2**0
                  ALLOC
 20 .text.__dummy_fini 00000002  00000222  00000222  000002b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__dummy_funcs_on_exit 00000002  00000224  00000224  000002b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.__dummy_simulator_exit 00000002  00000226  00000226  000002ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.exit    00000016  000001f4  000001f4  00000288  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text._Exit   00000004  0000021e  0000021e  000002b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__ctors_end>
   4:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
   8:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
   c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  10:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  14:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  18:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  1c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  20:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  24:	0c 94 b0 00 	jmp	0x160	; 0x160 <_etext>
  28:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  2c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  30:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  34:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  38:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  3c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  40:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  44:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  48:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  4c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  50:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  54:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  58:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  5c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  60:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  64:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  68:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  6c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  70:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  74:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  78:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  7c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  80:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  84:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  88:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  8c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  90:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  94:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  98:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  9c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  a0:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  a4:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  a8:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  ac:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  b0:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  b4:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  b8:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  bc:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  c0:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  c4:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  c8:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  cc:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  d0:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  d4:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  d8:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  dc:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  e0:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  e4:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  e8:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  ec:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>
  f0:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__bad_interrupt>

000000f4 <.dinit>:
  f4:	40 00       	.word	0x0040	; ????
  f6:	40 01       	movw	r8, r0
  f8:	80 00       	.word	0x0080	; ????

000000fa <__ctors_end>:
  fa:	80 91 01 10 	lds	r24, 0x1001	; 0x801001 <__TEXT_REGION_LENGTH__+0x7e1001>
  fe:	8f 7c       	andi	r24, 0xCF	; 207
 100:	80 60       	ori	r24, 0x00	; 0
 102:	80 68       	ori	r24, 0x80	; 128
 104:	80 93 01 10 	sts	0x1001, r24	; 0x801001 <__TEXT_REGION_LENGTH__+0x7e1001>
 108:	11 24       	eor	r1, r1
 10a:	1f be       	out	0x3f, r1	; 63
 10c:	cf ef       	ldi	r28, 0xFF	; 255
 10e:	cd bf       	out	0x3d, r28	; 61
 110:	df e7       	ldi	r29, 0x7F	; 127
 112:	de bf       	out	0x3e, r29	; 62

00000114 <__do_copy_data>:
 114:	e4 ef       	ldi	r30, 0xF4	; 244
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	40 e0       	ldi	r20, 0x00	; 0
 11a:	19 c0       	rjmp	.+50     	; 0x14e <__do_clear_bss+0x8>
 11c:	b7 91       	elpm	r27, Z+
 11e:	a7 91       	elpm	r26, Z+
 120:	37 91       	elpm	r19, Z+
 122:	27 91       	elpm	r18, Z+
 124:	07 91       	elpm	r16, Z+
 126:	07 fd       	sbrc	r16, 7
 128:	0e c0       	rjmp	.+28     	; 0x146 <__do_clear_bss>
 12a:	97 91       	elpm	r25, Z+
 12c:	87 91       	elpm	r24, Z+
 12e:	ef 01       	movw	r28, r30
 130:	f9 2f       	mov	r31, r25
 132:	e8 2f       	mov	r30, r24
 134:	0b bf       	out	0x3b, r16	; 59
 136:	07 90       	elpm	r0, Z+
 138:	0d 92       	st	X+, r0
 13a:	a2 17       	cp	r26, r18
 13c:	b3 07       	cpc	r27, r19
 13e:	d9 f7       	brne	.-10     	; 0x136 <__do_copy_data+0x22>
 140:	fe 01       	movw	r30, r28
 142:	1b be       	out	0x3b, r1	; 59
 144:	04 c0       	rjmp	.+8      	; 0x14e <__do_clear_bss+0x8>

00000146 <__do_clear_bss>:
 146:	1d 92       	st	X+, r1
 148:	a2 17       	cp	r26, r18
 14a:	b3 07       	cpc	r27, r19
 14c:	e1 f7       	brne	.-8      	; 0x146 <__do_clear_bss>
 14e:	e9 3f       	cpi	r30, 0xF9	; 249
 150:	f4 07       	cpc	r31, r20
 152:	21 f7       	brne	.-56     	; 0x11c <__do_copy_data+0x8>
 154:	0e 94 cf 00 	call	0x19e	; 0x19e <main>
 158:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <exit>

0000015c <_exit>:
 15c:	f8 94       	cli

0000015e <__stop_program>:
 15e:	ff cf       	rjmp	.-2      	; 0x15e <__stop_program>

Disassembly of section .text:

0000021a <__bad_interrupt>:
 21a:	0c 94 00 00 	jmp	0	; 0x0 <__FLMAP_SECTION0__>

Disassembly of section .text.initComparator:

000001be <initComparator>:

uint8_t is_sig = 0;

void initComparator() {

	CCL.LUT0CTRLB = CCL_INSEL0_IN0_gc     /* IO pin LUTn-IN0 input source */
 1be:	e0 ec       	ldi	r30, 0xC0	; 192
 1c0:	f1 e0       	ldi	r31, 0x01	; 1
 1c2:	85 e0       	ldi	r24, 0x05	; 5
 1c4:	81 87       	std	Z+9, r24	; 0x09
	| CCL_INSEL1_MASK_gc; /* Masked input */

	CCL.LUT0CTRLA = CCL_CLKSRC_CLKPER_gc     /* Peripheral Clock */
 1c6:	90 e4       	ldi	r25, 0x40	; 64
 1c8:	90 87       	std	Z+8, r25	; 0x08
	| CCL_EDGEDET_DIS_gc     /* Edge detector is disabled */
	| CCL_FILTSEL_DISABLE_gc /* Filter disabled */
	| 0 << CCL_ENABLE_bp     /* LUT Enable: disabled */
	| 1 << CCL_OUTEN_bp;     /* Output Enable: enabled */

	CCL.TRUTH2 = 2; /* Truth 2: 2 */
 1ca:	92 e0       	ldi	r25, 0x02	; 2
 1cc:	93 8b       	std	Z+19, r25	; 0x13

	CCL.LUT2CTRLB = CCL_INSEL0_IN0_gc     /* IO pin LUTn-IN0 input source */
 1ce:	81 8b       	std	Z+17, r24	; 0x11
	| CCL_INSEL1_MASK_gc; /* Masked input */

	CCL.LUT2CTRLA = CCL_CLKSRC_CLKPER_gc     /* Peripheral Clock */
 1d0:	81 e4       	ldi	r24, 0x41	; 65
 1d2:	80 8b       	std	Z+16, r24	; 0x10
	| CCL_EDGEDET_DIS_gc     /* Edge detector is disabled */
	| CCL_FILTSEL_DISABLE_gc /* Filter disabled */
	| 1 << CCL_ENABLE_bp     /* LUT Enable: enabled */
	| 1 << CCL_OUTEN_bp;     /* Output Enable: enabled */

	CCL.CTRLA = 1 << CCL_ENABLE_bp      /* Enable: enabled */
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	80 83       	st	Z, r24
 1d8:	08 95       	ret

Disassembly of section .text.EVENT_SYSTEM_0_init:

0000020a <EVENT_SYSTEM_0_init>:
	| 0 << CCL_RUNSTDBY_bp; /* Run in Standby: disabled */
}

void EVENT_SYSTEM_0_init()
{
	EVSYS.CHANNEL0 = EVSYS_CHANNEL0_PORTA_PIN6_gc; /* Configurable Custom Logic LUT2 */
 20a:	e0 e0       	ldi	r30, 0x00	; 0
 20c:	f2 e0       	ldi	r31, 0x02	; 2
 20e:	86 e4       	ldi	r24, 0x46	; 70
 210:	80 8b       	std	Z+16, r24	; 0x10
	EVSYS.USERTCA0CNTA = EVSYS_USER_CHANNEL0_gc; /* Connect user to event channel 0 */
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	82 af       	std	Z+58, r24	; 0x3a
	EVSYS.USERTCA0CNTB = EVSYS_USER_CHANNEL0_gc;
 216:	83 af       	std	Z+59, r24	; 0x3b
 218:	08 95       	ret

Disassembly of section .text.TIMER_0_init:

000001da <TIMER_0_init>:
}

void TIMER_0_init()
{

	TCA0.SINGLE.EVCTRL = 1 << TCA_SINGLE_CNTBEI_bp | TCA_SINGLE_EVACTB_RESTART_HIGHLVL_gc;
 1da:	e0 e0       	ldi	r30, 0x00	; 0
 1dc:	fa e0       	ldi	r31, 0x0A	; 10
 1de:	80 ed       	ldi	r24, 0xD0	; 208
 1e0:	81 87       	std	Z+9, r24	; 0x09

	TCA0.SINGLE.INTCTRL = 0 << TCA_SINGLE_CMP0_bp   /* Compare 0 Interrupt: disabled */
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	82 87       	std	Z+10, r24	; 0x0a
	| 0 << TCA_SINGLE_CMP1_bp /* Compare 1 Interrupt: disabled */
	| 0 << TCA_SINGLE_CMP2_bp /* Compare 2 Interrupt: disabled */
	| 1 << TCA_SINGLE_OVF_bp; /* Overflow Interrupt: enabled */

	TCA0.SINGLE.CNT = 500; /* Period: 0xffff */
 1e6:	84 ef       	ldi	r24, 0xF4	; 244
 1e8:	91 e0       	ldi	r25, 0x01	; 1
 1ea:	80 a3       	std	Z+32, r24	; 0x20
 1ec:	91 a3       	std	Z+33, r25	; 0x21

	TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV16_gc      /* System Clock */
 1ee:	89 e0       	ldi	r24, 0x09	; 9
 1f0:	80 83       	st	Z, r24
 1f2:	08 95       	ret

Disassembly of section .text.__vector_9:

00000160 <__vector_9>:
	| 1 << TCA_SINGLE_ENABLE_bp    /* Module Enable: enabled */
	| 0 << TCA_SINGLE_RUNSTDBY_bp; /* RUN STANDBY: enabled */
}

ISR(TCA0_OVF_vect)
{
 160:	1f 92       	push	r1
 162:	0f 92       	push	r0
 164:	0f b6       	in	r0, 0x3f	; 63
 166:	0f 92       	push	r0
 168:	11 24       	eor	r1, r1
 16a:	8f 93       	push	r24

	if ( is_sig ) {
 16c:	80 91 00 40 	lds	r24, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
 170:	88 23       	and	r24, r24
 172:	31 f0       	breq	.+12     	; 0x180 <__vector_9+0x20>
		is_sig = 0;
 174:	10 92 00 40 	sts	0x4000, r1	; 0x804000 <__DATA_REGION_ORIGIN__>
		PORTB.OUTCLR = PIN3_bm;
 178:	88 e0       	ldi	r24, 0x08	; 8
 17a:	80 93 26 04 	sts	0x0426, r24	; 0x800426 <__TEXT_REGION_LENGTH__+0x7e0426>
 17e:	06 c0       	rjmp	.+12     	; 0x18c <__vector_9+0x2c>
	} else { is_sig = 1; PORTB.OUTSET = PIN3_bm; }
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	80 93 00 40 	sts	0x4000, r24	; 0x804000 <__DATA_REGION_ORIGIN__>
 186:	88 e0       	ldi	r24, 0x08	; 8
 188:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <__TEXT_REGION_LENGTH__+0x7e0425>

	TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7e0a0b>
}
 192:	8f 91       	pop	r24
 194:	0f 90       	pop	r0
 196:	0f be       	out	0x3f, r0	; 63
 198:	0f 90       	pop	r0
 19a:	1f 90       	pop	r1
 19c:	18 95       	reti

Disassembly of section .text.main:

0000019e <main>:


int main(void)
{

	PORTB.DIRSET = PIN3_bm;
 19e:	e0 e2       	ldi	r30, 0x20	; 32
 1a0:	f4 e0       	ldi	r31, 0x04	; 4
 1a2:	88 e0       	ldi	r24, 0x08	; 8
 1a4:	81 83       	std	Z+1, r24	; 0x01
	PORTB.OUTSET = PIN3_bm;
 1a6:	85 83       	std	Z+5, r24	; 0x05
	
	PORTB.DIRCLR = PIN2_bm;
 1a8:	94 e0       	ldi	r25, 0x04	; 4
 1aa:	92 83       	std	Z+2, r25	; 0x02
	PORTB.PIN2CTRL = PORT_PULLUPEN_bm;
 1ac:	82 8b       	std	Z+18, r24	; 0x12
	//PORTB.PIN2CTRL |= PORT_ISC_FALLING_gc;
	
	initComparator();
 1ae:	0e 94 df 00 	call	0x1be	; 0x1be <initComparator>
	EVENT_SYSTEM_0_init();
 1b2:	0e 94 05 01 	call	0x20a	; 0x20a <EVENT_SYSTEM_0_init>
	TIMER_0_init();
 1b6:	0e 94 ed 00 	call	0x1da	; 0x1da <TIMER_0_init>
	sei();
 1ba:	78 94       	sei
 1bc:	ff cf       	rjmp	.-2      	; 0x1bc <main+0x1e>

Disassembly of section .text.__dummy_fini:

00000222 <_fini>:
 222:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000224 <__funcs_on_exit>:
 224:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000226 <__simulator_exit>:
 226:	08 95       	ret

Disassembly of section .text.exit:

000001f4 <exit>:
 1f4:	ec 01       	movw	r28, r24
 1f6:	0e 94 12 01 	call	0x224	; 0x224 <__funcs_on_exit>
 1fa:	0e 94 11 01 	call	0x222	; 0x222 <_fini>
 1fe:	ce 01       	movw	r24, r28
 200:	0e 94 13 01 	call	0x226	; 0x226 <__simulator_exit>
 204:	ce 01       	movw	r24, r28
 206:	0e 94 0f 01 	call	0x21e	; 0x21e <_Exit>

Disassembly of section .text._Exit:

0000021e <_Exit>:
 21e:	0e 94 ae 00 	call	0x15c	; 0x15c <_exit>
